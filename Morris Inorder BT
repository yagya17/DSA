/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<int> inorderTraversal(TreeNode* root) {
        vector<int>v;
        if(!root) return v;
        TreeNode* curr=root;
        while(curr)
        {
            if(curr->left==NULL)
            {
                v.push_back(curr->val);
                curr=curr->right;
            }
            else{
                TreeNode* newe=curr->left;
                while(newe->right&&newe->right!=curr)
                {
                    newe=newe->right;
                }
                if(!newe->right)
                {newe->right=curr;curr=curr->left;}
                else{v.push_back(curr->val);newe->right=NULL;curr=curr->right;}
                
            }
            
            
            
        }
        return v;
        
        
        
        
    }
};
