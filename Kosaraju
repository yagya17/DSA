int in[2001];
vector<int>arr[2001];
vector<int>tr[2001];
vector<int>order;
vector<int>scc;
int vis[2001];
void dfs(int key)
 
{
    vis[key]=1;
    
    for(int i=0;i<arr[key][i];i++)
    {
        if(vis[arr[key][i]]==0) 
        {dfs(arr[key][i]);}
    }
    order.push_back(key);
}
void dfs1(int key)
 
{
    vis[key]=1;
    
    for(int i=0;i<tr[key][i];i++)
    {
        if(vis[tr[key][i]]==0) 
        {dfs1(tr[key][i]);}
    }
    scc.push_back(key);
}


vector<vector<int>> stronglyConnectedComponents(int n, vector<vector<int>> &edge)
{
    for(int i=0;i<n;i++)
    {
        arr[i].clear();tr[i].clear();vis[i]=0;
    }
    order.clear();
    for(int i=0;i<edge.size();i++)
    {
     arr[edge[i][0]].push_back(edge[i][1]);
        tr[edge[i][1]].push_back(edge[i][0]);
    }
    for(int i=0;i<n;i++)
    {
    if(vis[i]==0) dfs(i);
    }
    for(int i=0;i<n;i++)
    {
    vis[i]=0;
    }
    for(int i=0;i<order.size();i++)
    {
     scc.clear();
        dfs1(order[n-i]);
        cout<<order[n-i]<<" ";
        for(int i=0;i<scc.size();i++)
        {cout<<scc[i]<<" ";}
        cout<<endl;
    }
}
