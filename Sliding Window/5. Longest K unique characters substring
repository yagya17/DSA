int longestKSubstr(string s, int k) {
        int n = s.size();
        map<int, int>freq;
        int max_window = 0;
        int i = 0; int j = 0;
        int unique_cnt = 0;
        while( j<n ){
            
            freq[s[j]]++;
            if(freq[s[j]]==1) unique_cnt++;
            if(unique_cnt == k){
                max_window = max(max_window, j-i+1);
            }
            else if(unique_cnt > k){
                while(unique_cnt > k){
                    freq[s[i]]--;
                    if(freq[s[i]]==0) unique_cnt--;
                    i++;
                }
            }

            j++;
        }
        if(max_window == 0) return -1;
        return max_window;
    }
