int findLargestSubarray(vector<int>arr, int k){
    
    int n = arr.size();
    int max_window = 0;
    map<int, int>prefix_sum;
    int curr_sum = 0;
    
    for(int i=0; i<n; i++){
        
        curr_sum += arr[i];
        
        if(curr_sum == k){
            max_window = max(i+1, max_window);
        }
        
        int remaining_sum = curr_sum - k;
        
        if(prefix_sum.find(remaining_sum) != prefix_sum.end()){
            max_window = max(max_window, i-prefix_sum[remaining_sum]);
        }
        
        if(prefix_sum.find(curr_sum) == prefix_sum.end()){
            prefix_sum[curr_sum] = i;
        }
    }
    
    
    
    return max_window;
    
}
