int count(vector<int> &a,int mid)
{
    int lo=0;
    int hi=a.size()-1;
     while(lo<=hi)
    {
        int md=(hi+lo)/2;
        if(a[md]>mid) hi=md-1;
        else lo=md+1;
    }
    
    return lo;
}

int Solution::findMedian(vector<vector<int> > &a) 
{   int n=a.size();
    int m=a[0].size();
    int maxi=INT_MIN; int mini=INT_MAX;
   for(int i=0;i<a.size();i++)
   {
       mini=min(mini,a[i][0]);
       maxi=max(maxi,a[i][a[0].size()-1]);
   }
   int lo=mini;
    int hi=maxi;
    while(lo<=hi)
    {
        int mid=(lo+hi)/2; int cnt=0;
        for(int i=0;i<n;i++)
        {
            cnt+=count(a[i],mid);
        }
        if(cnt>(n*m)/2) hi=mid-1;
        else lo=mid+1;
    }
    return lo;
}


T.C. : nlogm 
S.C. : O(1)+ recursion
