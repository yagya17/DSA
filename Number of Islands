class Solution {
public:
    bool isvalid(int i,int j,int m,int n)
    {
        if(i>=m||j>=n||i<0||j<0) return false;
        else return true;
    }
    void sol(int x,int y,int m,int n,vector<vector<char>>& grid)
    {   
        grid[x][y]=0;
      int i=1;int j=1;
          
                if(isvalid(x+i,y,m,n)&&grid[x+i][y]=='1') sol(x+i,y,m,n,grid);
                if(isvalid(x-i,y,m,n)&&grid[x-i][y]=='1') sol(x-i,y,m,n,grid);   
                 if(isvalid(x,y+j,m,n)&&grid[x][y+j]=='1') sol(x,y+j,m,n,grid);
                 if(isvalid(x,y-j,m,n)&&grid[x][y-j]=='1') sol(x,y-j,m,n,grid);
           
        
    }
    int numIslands(vector<vector<char>>& grid) {
        int m=grid.size();
        int n=grid[0].size();int count=0;
        for(int i=0;i<m;i++)
        {
            for(int j=0;j<n;j++)
            {
                if(grid[i][j]=='1'){sol(i,j,m,n,grid);count++;}
            }
        }
        return count;
    }
};
