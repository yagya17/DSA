/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<vector<int>> verticalTraversal(TreeNode* root) {
        map<int,map<int,multiset<int>>>m;
        queue<pair<TreeNode*,pair<int,int>>>q;
        vector<vector<int>>v;
        q.push({root,{0,0}}); 
        while(!q.empty())
        {
            TreeNode* curr = q.front().first;
            int line = q.front().second.first; int lvl=q.front().second.second;
            q.pop();
            m[line][lvl].insert(curr->val);
            if(curr->left) q.push({curr->left,{line-1,lvl+1}});
            if(curr->right) q.push({curr->right,{line+1,lvl+1}});
        }
        for(auto it:m)
        {
            vector<int>ans;
            for(auto p: it.second )
            {
                ans.insert(ans.end(),p.second.begin(),p.second.end());
            }
            v.push_back(ans);
        }
        return v;
    }
};
