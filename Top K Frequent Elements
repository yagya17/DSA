class Solution {
public:
    vector<int> topKFrequent(vector<int>& nums, int k) {
priority_queue<pair<int,int>,vector<pair<int,int>>>q;
        int n=nums.size();
        if(nums.size()<=1) return nums;
        sort(nums.begin(), nums.end());
        int j=0;
        for(int i=1;i<n;i++)
        {
            if(nums[i-1]!=nums[i])
            {
                q.push({i-j, nums[i-1]});
                j=i;
            }
        }
        q.push({n-j, nums[n-1]});
        vector<int>ans;
        cout<<q.size();
        for(int i=0;i<k;i++)
        {
            int temp=q.top().second;
            ans.push_back(temp); q.pop();
        }
        return ans;
    }
};
