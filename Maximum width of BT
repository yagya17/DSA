class Solution {
public:
   
    int widthOfBinaryTree(TreeNode* root) {
         if(root==NULL)
               return 0;
        queue<pair<TreeNode*,int>>q;
        q.push({root,0}); int ans=0;
        while(!q.empty())
        { int len=q.size();
         int mini=q.front().second;int first;int last;
         for(int i=0;i<len;i++)
         {     int curr_id=q.front().second-mini;
             TreeNode* store=q.front().first; q.pop();
             
         if(i==0) first=curr_id;
          if(i==len-1) last=curr_id;
           if(store->left) q.push({store->left,(long long)curr_id*2+1});
            if(store->right)q.push({store->right,(long long)curr_id*2+2});
         }
            
           ans=max(ans,last-first+1);
        }
        return ans;
    }
};
