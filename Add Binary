class Solution {
public:
    string addBinary(string a, string b) {
        string ans;int n=a.size(); int m=b.size();
        if(b.size() > a.size()) swap(a,b);
        while(b.size() < a.size()) b = "0" + b;
        reverse(a.begin(),a.end());
        reverse(b.begin(),b.end());
        int curr_car=0; int a1=0; int prev_car=0; int i=0;
        for(i=0;i<min(a.size(),b.size());i++)
        {
            if(a[i]=='0'||b[i]=='0') 
               {
                a1=(int)(a[i]-48)+(int)(b[i]-48);
                if(prev_car==0||a1==0) a1=a1+prev_car;
                else {a1=0;curr_car=1;prev_car=0;}
                
                }
            else
            {
                a1=0; curr_car=1;
                if(prev_car) a1=1;
            
            }
            prev_car=curr_car;
            ans.push_back((char)(a1+48));
            
             curr_car=0;
        }
        
        cout<<ans<<" ";
       
       if(prev_car==1){ ans.push_back((char)(prev_car+48));}
       reverse(ans.begin(),ans.end());
        return ans;
    }
};
