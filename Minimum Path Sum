class Solution {
public:
long long t[201][201];
long long sol(vector<vector<int>>& grid, int i, int j)
{
    if(i==grid.size()-1 && j==grid[0].size()-1) return grid[i][j];
    if(i>grid.size()-1 || j>grid[0].size()-1) return 1e9;
    if(t[i][j]!=-1) return t[i][j];
    // cout<<"1";
    int ans = grid[i][j]+min(sol(grid, i+1,j),sol(grid,i,j+1));

    return t[i][j]=ans;


}
    int minPathSum(vector<vector<int>>& grid) {
        memset(t,-1,sizeof(t));
       return sol(grid,0,0);
    }
};
